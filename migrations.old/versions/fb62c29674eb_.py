"""empty message

Revision ID: fb62c29674eb
Revises: 
Create Date: 2017-04-27 04:55:55.585638

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fb62c29674eb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('algorithm',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=512), nullable=True),
    sa.Column('Descr', sa.String(length=512), nullable=True),
    sa.Column('Is_mapped', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('asset_type',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('issue_history_timestamp',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('Timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('point_type',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('site',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=512), nullable=True),
    sa.Column('DB_key', sa.String(length=512), nullable=True),
    sa.Column('DB_username', sa.String(length=512), nullable=True),
    sa.Column('DB_password', sa.String(length=512), nullable=True),
    sa.Column('DB_address', sa.String(length=512), nullable=True),
    sa.Column('DB_port', sa.String(length=512), nullable=True),
    sa.Column('DB_name', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('tbLogTimeValues',
    sa.Column('DateTimeStamp', sa.DateTime(), nullable=True),
    sa.Column('SeqNo', sa.BigInteger(), nullable=False),
    sa.Column('FloatVALUE', sa.Float(), nullable=True),
    sa.Column('ParentID', sa.Integer(), nullable=False),
    sa.Column('OdometerValue', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('SeqNo', 'ParentID')
    )
    op.create_table('tbLoggedEntities',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('GUID', sa.String(length=50), nullable=True),
    sa.Column('Path', sa.String(length=1024), nullable=True),
    sa.Column('Descr', sa.String(length=512), nullable=True),
    sa.Column('Disabled', sa.Boolean(), nullable=True),
    sa.Column('LastMod', sa.DateTime(), nullable=True),
    sa.Column('Version', sa.Integer(), nullable=True),
    sa.Column('Type', sa.String(length=80), nullable=True),
    sa.Column('LogPoint', sa.String(length=1024), nullable=True),
    sa.Column('UNITPREFIX', sa.String(length=512), nullable=True),
    sa.Column('Unit', sa.String(length=512), nullable=True),
    sa.Column('BaseValue', sa.Float(), nullable=True),
    sa.Column('MeterStartPoint', sa.Float(), nullable=True),
    sa.Column('LastReadValue', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('weather',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('Location', sa.String(length=512), nullable=True),
    sa.Column('Temperature', sa.Float(), nullable=True),
    sa.Column('Humidity', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('algo_point_mapping',
    sa.Column('Algorithm_id', sa.Integer(), nullable=False),
    sa.Column('Point_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Algorithm_id'], ['algorithm.ID'], ),
    sa.ForeignKeyConstraint(['Point_type_id'], ['point_type.ID'], ),
    sa.PrimaryKeyConstraint('Algorithm_id', 'Point_type_id')
    )
    op.create_table('asset',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=512), nullable=True),
    sa.Column('Location', sa.String(length=512), nullable=True),
    sa.Column('Group', sa.String(length=512), nullable=True),
    sa.Column('Health', sa.Float(), nullable=True),
    sa.Column('Priority', sa.Integer(), nullable=True),
    sa.Column('Notes', sa.Text(), nullable=True),
    sa.Column('Site_id', sa.Integer(), nullable=True),
    sa.Column('Type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Site_id'], ['site.ID'], ),
    sa.ForeignKeyConstraint(['Type_id'], ['asset_type.ID'], ),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('functional_descriptor',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=512), nullable=True),
    sa.Column('Type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Type_id'], ['asset_type.ID'], ),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('inbuildings_config',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('Site_id', sa.Integer(), nullable=True),
    sa.Column('Enabled', sa.Boolean(), nullable=True),
    sa.Column('Connection_key', sa.String(length=512), nullable=True),
    sa.ForeignKeyConstraint(['Site_id'], ['site.ID'], ),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('issue_history',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('Issues', sa.Integer(), nullable=True),
    sa.Column('Timestamp_id', sa.Integer(), nullable=True),
    sa.Column('Site_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Site_id'], ['site.ID'], ),
    sa.ForeignKeyConstraint(['Timestamp_id'], ['issue_history_timestamp.ID'], ),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('algo_asset_mapping',
    sa.Column('Asset_id', sa.Integer(), nullable=False),
    sa.Column('Algorithm_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Algorithm_id'], ['algorithm.ID'], ),
    sa.ForeignKeyConstraint(['Asset_id'], ['asset.ID'], ),
    sa.PrimaryKeyConstraint('Asset_id', 'Algorithm_id')
    )
    op.create_table('algo_exclusions',
    sa.Column('Asset_id', sa.Integer(), nullable=False),
    sa.Column('Algorithm_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Algorithm_id'], ['algorithm.ID'], ),
    sa.ForeignKeyConstraint(['Asset_id'], ['asset.ID'], ),
    sa.PrimaryKeyConstraint('Asset_id', 'Algorithm_id')
    )
    op.create_table('algo_function_mapping',
    sa.Column('Algorithm_id', sa.Integer(), nullable=False),
    sa.Column('FunctionalDescriptor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Algorithm_id'], ['algorithm.ID'], ),
    sa.ForeignKeyConstraint(['FunctionalDescriptor_id'], ['functional_descriptor.ID'], ),
    sa.PrimaryKeyConstraint('Algorithm_id', 'FunctionalDescriptor_id')
    )
    op.create_table('asset_function_mapping',
    sa.Column('Asset_id', sa.Integer(), nullable=False),
    sa.Column('FunctionalDescriptor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Asset_id'], ['asset.ID'], ),
    sa.ForeignKeyConstraint(['FunctionalDescriptor_id'], ['functional_descriptor.ID'], ),
    sa.PrimaryKeyConstraint('Asset_id', 'FunctionalDescriptor_id')
    )
    op.create_table('asset_point',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=512), nullable=True),
    sa.Column('Asset_id', sa.Integer(), nullable=True),
    sa.Column('PointType_id', sa.Integer(), nullable=True),
    sa.Column('LoggedEntity_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Asset_id'], ['asset.ID'], ),
    sa.ForeignKeyConstraint(['PointType_id'], ['point_type.ID'], ),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('inbuildings_asset',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=512), nullable=True),
    sa.Column('Location', sa.String(length=512), nullable=True),
    sa.Column('Group', sa.String(length=512), nullable=True),
    sa.Column('Site_id', sa.Integer(), nullable=True),
    sa.Column('Asset_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Asset_id'], ['asset.ID'], ),
    sa.ForeignKeyConstraint(['Site_id'], ['site.ID'], ),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('result',
    sa.Column('ID', sa.Integer(), nullable=False),
    sa.Column('First_timestamp', sa.DateTime(), nullable=True),
    sa.Column('Recent_timestamp', sa.DateTime(), nullable=True),
    sa.Column('Asset_id', sa.Integer(), nullable=True),
    sa.Column('Algorithm_id', sa.Integer(), nullable=True),
    sa.Column('Result', sa.Float(), nullable=True),
    sa.Column('Passed', sa.Boolean(), nullable=True),
    sa.Column('Active', sa.Boolean(), nullable=True),
    sa.Column('Acknowledged', sa.Boolean(), nullable=True),
    sa.Column('Occurances', sa.Integer(), nullable=True),
    sa.Column('Notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['Algorithm_id'], ['algorithm.ID'], ),
    sa.ForeignKeyConstraint(['Asset_id'], ['asset.ID'], ),
    sa.PrimaryKeyConstraint('ID')
    )
    op.create_table('points_checked',
    sa.Column('Result_id', sa.Integer(), nullable=False),
    sa.Column('Point_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Point_id'], ['asset_point.ID'], ),
    sa.ForeignKeyConstraint(['Result_id'], ['result.ID'], ),
    sa.PrimaryKeyConstraint('Result_id', 'Point_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('points_checked')
    op.drop_table('result')
    op.drop_table('inbuildings_asset')
    op.drop_table('asset_point')
    op.drop_table('asset_function_mapping')
    op.drop_table('algo_function_mapping')
    op.drop_table('algo_exclusions')
    op.drop_table('algo_asset_mapping')
    op.drop_table('issue_history')
    op.drop_table('inbuildings_config')
    op.drop_table('functional_descriptor')
    op.drop_table('asset')
    op.drop_table('algo_point_mapping')
    op.drop_table('weather')
    op.drop_table('tbLoggedEntities')
    op.drop_table('tbLogTimeValues')
    op.drop_table('site')
    op.drop_table('point_type')
    op.drop_table('issue_history_timestamp')
    op.drop_table('asset_type')
    op.drop_table('algorithm')
    # ### end Alembic commands ###
